#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
"""

import sys
import os

def test_basic_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        import fastapi
        print(f"‚úÖ FastAPI {fastapi.__version__}")
        
        import uvicorn
        print(f"‚úÖ Uvicorn {uvicorn.__version__}")
        
        import sqlalchemy
        print(f"‚úÖ SQLAlchemy {sqlalchemy.__version__}")
        
        import requests
        print(f"‚úÖ Requests {requests.__version__}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def test_simple_app():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    try:
        from fastapi import FastAPI
        
        app = FastAPI()
        
        @app.get("/")
        def root():
            return {"message": "Hello World"}
        
        @app.get("/health")
        def health():
            return {"status": "ok"}
        
        print("‚úÖ –ü—Ä–æ—Å—Ç–æ–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
        print(f"üìä –ú–∞—Ä—à—Ä—É—Ç—ã: {[route.path for route in app.routes]}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        return False

def test_config():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    print("\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        database_url = os.getenv('DATABASE_URL', 'sqlite:///./test.db')
        token = os.getenv('TOKEN', 'test_token')
        webhook_url = os.getenv('WEBHOOK_URL', 'https://test.com')
        
        print(f"‚úÖ DATABASE_URL: {database_url[:50]}...")
        print(f"‚úÖ TOKEN: {'SET' if token != 'test_token' else 'NOT SET'}")
        print(f"‚úÖ WEBHOOK_URL: {webhook_url}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def main():
    print("üöÄ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ö–û–ú–ü–û–ù–ï–ù–¢–û–í")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã
    if not test_basic_imports():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–≤—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if not test_simple_app():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not test_config():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
        return False
    
    print("\n" + "=" * 50)
    print("‚úÖ –í–°–ï –ë–ê–ó–û–í–´–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
    print("\nüéØ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è Render:")
    print("1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Python 3.11")
    print("2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π requirements.txt")
    print("3. Start Command: uvicorn server.main:app --host 0.0.0.0 --port $PORT")
    
    return True

if __name__ == "__main__":
    main() 