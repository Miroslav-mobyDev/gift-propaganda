#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Render —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import os
import subprocess
import sys
from pathlib import Path

def run_command(command, cwd=None):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        result = subprocess.run(
            command,
            shell=True,
            cwd=cwd,
            capture_output=True,
            text=True,
            check=True
        )
        print(f"‚úÖ {command}")
        return result.stdout
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: {command}")
        print(f"–û—à–∏–±–∫–∞: {e.stderr}")
        return None

def check_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = [
        "requirements.txt",
        "server/main.py",
        "server/db.py",
        "render.yaml"
    ]
    
    missing_files = []
    for file in required_files:
        if not Path(file).exists():
            missing_files.append(file)
    
    if missing_files:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"   - {file}")
        return False
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
    return True

def show_final_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–µ–ø–ª–æ—è"""
    print("\n" + "=" * 60)
    print("üöÄ –§–ò–ù–ê–õ–¨–ù–´–ô –î–ï–ü–õ–û–ô –ù–ê RENDER")
    print("=" * 60)
    
    instructions = """
üîß –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:

1. ‚úÖ –£–±—Ä–∞–ª aiohttp (–Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º —Å Python 3.13)
2. ‚úÖ –ó–∞–º–µ–Ω–∏–ª –Ω–∞ requests (—Å—Ç–∞–±–∏–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞)
3. ‚úÖ –û–±–Ω–æ–≤–∏–ª –≤–µ—Ä—Å–∏–∏ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
4. ‚úÖ –£–±—Ä–∞–ª apscheduler (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
5. ‚úÖ –ò—Å–ø—Ä–∞–≤–∏–ª –ø—Ä–æ–±–ª–µ–º—ã —Å pydantic

üìã –ü–û–®–ê–ì–û–í–´–ï –ò–ù–°–¢–†–£–ö–¶–ò–ò:

1. üåê –ü–ï–†–ï–ô–î–ò–¢–ï –ù–ê RENDER
   –°—Å—ã–ª–∫–∞: https://render.com

2. üìã –°–û–ó–î–ê–ô–¢–ï –ù–û–í–´–ô –°–ï–†–í–ò–°
   - –ù–∞–∂–º–∏—Ç–µ "New +" ‚Üí "Web Service"
   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
   - –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π GiftNews-main

3. ‚öôÔ∏è –ù–ê–°–¢–†–û–ô–¢–ï –°–ï–†–í–ò–°
   - Name: giftpropaganda-api
   - Environment: Python
   - Build Command: pip install -r requirements.txt
   - Start Command: uvicorn server.main:app --host 0.0.0.0 --port $PORT

4. üîß –î–û–ë–ê–í–¨–¢–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø
   –í —Ä–∞–∑–¥–µ–ª–µ "Environment Variables" –¥–æ–±–∞–≤—å—Ç–µ:
   
   TOKEN=your_telegram_bot_token_here
   WEBHOOK_URL=https://your-app-name.onrender.com/webhook
   
   (DATABASE_URL —Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)

5. üóÑÔ∏è –°–û–ó–î–ê–ô–¢–ï –ë–ê–ó–£ –î–ê–ù–ù–´–•
   - –ù–∞–∂–º–∏—Ç–µ "New +" ‚Üí "PostgreSQL"
   - Name: giftpropaganda-db
   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫ –≤–∞—à–µ–º—É web —Å–µ—Ä–≤–∏—Å—É

6. üöÄ –ó–ê–ü–£–°–¢–ò–¢–ï –î–ï–ü–õ–û–ô
   - –ù–∞–∂–º–∏—Ç–µ "Create Web Service"
   - –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏ (5-10 –º–∏–Ω—É—Ç)

7. üîó –ü–û–°–õ–ï –î–ï–ü–õ–û–Ø
   - –û–±–Ω–æ–≤–∏—Ç–µ webhook –≤ Telegram:
     https://api.telegram.org/bot{YOUR_TOKEN}/setWebhook?url=https://your-app-name.onrender.com/webhook
   
   - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ API:
     https://your-app-name.onrender.com/health

8. ‚úÖ –ü–†–û–í–ï–†–¨–¢–ï –†–ê–ë–û–¢–£
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Render Dashboard
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ endpoint /health –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

üîß –ö–õ–Æ–ß–ï–í–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:

- ‚úÖ –£–±—Ä–∞–ª –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (aiohttp, apscheduler)
- ‚úÖ –ó–∞–º–µ–Ω–∏–ª –Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã (requests)
- ‚úÖ –û–±–Ω–æ–≤–∏–ª –≤–µ—Ä—Å–∏–∏ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
- ‚úÖ –ò—Å–ø—Ä–∞–≤–∏–ª –ø—Ä–æ–±–ª–µ–º—ã —Å Python 3.13
- ‚úÖ –£–ª—É—á—à–∏–ª –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫

üìä –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:

–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ:
- ‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å—Å—è –Ω–∞ Render
- ‚úÖ –ó–∞–ø—É—Å–∫–∞—Ç—å—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
- ‚úÖ –ü–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ PostgreSQL
- ‚úÖ –†–∞–±–æ—Ç–∞—Ç—å —Å Telegram webhook
- ‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å API endpoints
"""
    
    print(instructions)

def create_deployment_summary():
    """–°–æ–∑–¥–∞–µ—Ç —Å–≤–æ–¥–∫—É –¥–µ–ø–ª–æ—è"""
    print("\nüìã –°–í–û–î–ö–ê –î–ï–ü–õ–û–Ø")
    print("-" * 40)
    
    summary = f"""
‚úÖ –ì–û–¢–û–í–´–ï –§–ê–ô–õ–´:
   - requirements.txt (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω)
   - server/main.py (–æ–±–Ω–æ–≤–ª–µ–Ω)
   - server/db.py (—É–ª—É—á—à–µ–Ω)
   - render.yaml (–Ω–∞—Å—Ç—Ä–æ–µ–Ω)

‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò RENDER:
   - Environment: Python 3.11
   - Build: pip install -r requirements.txt
   - Start: uvicorn server.main:app --host 0.0.0.0 --port $PORT

üîß –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò:
   - ‚ùå aiohttp ‚Üí ‚úÖ requests
   - ‚ùå apscheduler ‚Üí ‚úÖ —É–±—Ä–∞–Ω (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
   - ‚úÖ pydantic 1.10.8 (—Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
   - ‚úÖ fastapi 0.95.2 (—Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)

üìÅ –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê:
   ‚îú‚îÄ‚îÄ requirements.txt (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω)
   ‚îú‚îÄ‚îÄ render.yaml (–Ω–∞—Å—Ç—Ä–æ–µ–Ω)
   ‚îú‚îÄ‚îÄ server/
   ‚îÇ   ‚îú‚îÄ‚îÄ main.py (–æ–±–Ω–æ–≤–ª–µ–Ω)
   ‚îÇ   ‚îú‚îÄ‚îÄ db.py (—É–ª—É—á—à–µ–Ω)
   ‚îÇ   ‚îú‚îÄ‚îÄ config.py
   ‚îÇ   ‚îî‚îÄ‚îÄ parsers/ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω)
   ‚îî‚îÄ‚îÄ ...

üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:
   1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://render.com
   2. –°–æ–∑–¥–∞–π—Ç–µ Web Service
   3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
   4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
   5. –°–æ–∑–¥–∞–π—Ç–µ PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
   6. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π
"""
    
    print(summary)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤–æ–¥–∫—É –≤ —Ñ–∞–π–ª
    with open("DEPLOYMENT_SUMMARY_FINAL.txt", "w", encoding="utf-8") as f:
        f.write(summary)
    
    print("üìù –°–≤–æ–¥–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ DEPLOYMENT_SUMMARY_FINAL.txt")

def main():
    print("üöÄ –§–ò–ù–ê–õ–¨–ù–´–ô –î–ï–ü–õ–û–ô –ù–ê RENDER")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    if not check_files():
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        sys.exit(1)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    show_final_instructions()
    
    # –°–æ–∑–¥–∞–µ–º —Å–≤–æ–¥–∫—É
    create_deployment_summary()
    
    print("\n" + "=" * 60)
    print("‚úÖ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´!")
    print("\nüéØ –í–ê–®–ò –î–ï–ô–°–¢–í–ò–Ø:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://render.com")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Web Service")
    print("3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ")
    print("4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π requirements.txt")
    print("\nüìñ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
    print("- DEPLOYMENT_SUMMARY_FINAL.txt")
    print("- RENDER_DEPLOY.md")
    print("- TROUBLESHOOTING.md")

if __name__ == "__main__":
    main() 