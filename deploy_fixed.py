#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Render —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
"""

import os
import subprocess
import sys
from pathlib import Path

def run_command(command, cwd=None):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        result = subprocess.run(
            command,
            shell=True,
            cwd=cwd,
            capture_output=True,
            text=True,
            check=True
        )
        print(f"‚úÖ {command}")
        return result.stdout
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: {command}")
        print(f"–û—à–∏–±–∫–∞: {e.stderr}")
        return None

def check_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    required_files = [
        "requirements.txt",
        "server/main.py",
        "server/db.py",
        "render.yaml"
    ]
    
    missing_files = []
    for file in required_files:
        if not Path(file).exists():
            missing_files.append(file)
    
    if missing_files:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"   - {file}")
        return False
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
    return True

def create_fixed_render_yaml():
    """–°–æ–∑–¥–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π render.yaml"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ render.yaml...")
    
    render_config = """services:
  - type: web
    name: giftpropaganda-api
    env: python
    plan: free
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn server.main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: PYTHON_VERSION
        value: 3.12.0
      - key: DATABASE_URL
        fromDatabase:
          name: giftpropaganda-db
          property: connectionString
"""
    
    with open("render.yaml", "w") as f:
        f.write(render_config)
    
    print("‚úÖ render.yaml –æ–±–Ω–æ–≤–ª–µ–Ω")

def create_database_service():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üóÑÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    db_config = """  - type: pserv
    name: giftpropaganda-db
    env: postgresql
    plan: free
    ipAllowList: []
"""
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ë–î –≤ render.yaml
    with open("render.yaml", "r") as f:
        content = f.read()
    
    if "pserv" not in content:
        with open("render.yaml", "w") as f:
            f.write(content + "\n" + db_config)
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–æ–±–∞–≤–ª–µ–Ω–∞")

def show_deploy_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–µ–ø–ª–æ—è"""
    print("\n" + "=" * 60)
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –î–ï–ü–õ–û–ô –ù–ê RENDER")
    print("=" * 60)
    
    instructions = """
üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•:

1. ‚úÖ –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
2. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
3. ‚úÖ –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
4. ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –ë–î
5. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –¥–µ—Ç–∞–ª—å–Ω—ã–π health check

üìã –ü–û–®–ê–ì–û–í–´–ï –ò–ù–°–¢–†–£–ö–¶–ò–ò:

1. üåê –ü–ï–†–ï–ô–î–ò–¢–ï –ù–ê RENDER
   –°—Å—ã–ª–∫–∞: https://render.com

2. üìã –°–û–ó–î–ê–ô–¢–ï –ù–û–í–´–ô –°–ï–†–í–ò–°
   - –ù–∞–∂–º–∏—Ç–µ "New +" ‚Üí "Web Service"
   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
   - –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π GiftNews-main

3. ‚öôÔ∏è –ù–ê–°–¢–†–û–ô–¢–ï –°–ï–†–í–ò–°
   - Name: giftpropaganda-api
   - Environment: Python
   - Build Command: pip install -r requirements.txt
   - Start Command: uvicorn server.main:app --host 0.0.0.0 --port $PORT

4. üîß –î–û–ë–ê–í–¨–¢–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø
   –í —Ä–∞–∑–¥–µ–ª–µ "Environment Variables" –¥–æ–±–∞–≤—å—Ç–µ:
   
   TOKEN=your_telegram_bot_token_here
   WEBHOOK_URL=https://your-app-name.onrender.com/webhook
   
   (DATABASE_URL —Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)

5. üóÑÔ∏è –°–û–ó–î–ê–ô–¢–ï –ë–ê–ó–£ –î–ê–ù–ù–´–•
   - –ù–∞–∂–º–∏—Ç–µ "New +" ‚Üí "PostgreSQL"
   - Name: giftpropaganda-db
   - –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫ –≤–∞—à–µ–º—É web —Å–µ—Ä–≤–∏—Å—É

6. üöÄ –ó–ê–ü–£–°–¢–ò–¢–ï –î–ï–ü–õ–û–ô
   - –ù–∞–∂–º–∏—Ç–µ "Create Web Service"
   - –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏ (5-10 –º–∏–Ω—É—Ç)

7. üîó –ü–û–°–õ–ï –î–ï–ü–õ–û–Ø
   - –û–±–Ω–æ–≤–∏—Ç–µ webhook –≤ Telegram:
     https://api.telegram.org/bot{YOUR_TOKEN}/setWebhook?url=https://your-app-name.onrender.com/webhook
   
   - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ API:
     https://your-app-name.onrender.com/health

8. ‚úÖ –ü–†–û–í–ï–†–¨–¢–ï –†–ê–ë–û–¢–£
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Render Dashboard
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ endpoint /health –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú:

–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ë–î:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Render Dashboard
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DATABASE_URL
4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å
5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ endpoint /health –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
"""
    
    print(instructions)

def create_troubleshooting_guide():
    """–°–æ–∑–¥–∞–µ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º"""
    print("üìñ –°–æ–∑–¥–∞–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º...")
    
    guide = """# üîß –†–£–ö–û–í–û–î–°–¢–í–û –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ –ü–†–û–ë–õ–ï–ú

## –ü—Ä–æ–±–ª–µ–º–∞: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

### –°–∏–º–ø—Ç–æ–º—ã:
- "SSL connection has been closed unexpectedly"
- "connection to server failed"
- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è

### –†–µ—à–µ–Ω–∏—è:

1. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ PostgreSQL —Å–µ—Ä–≤–∏—Å**
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –≤ Render Dashboard

2. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è**
   - DATABASE_URL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ TOKEN –∏ WEBHOOK_URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã

3. **–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã**
   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL —Å–µ—Ä–≤–∏—Å
   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Web —Å–µ—Ä–≤–∏—Å

4. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏**
   - –í Render Dashboard ‚Üí Logs
   - –ò—â–∏—Ç–µ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î

5. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É**
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ endpoint /health
   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ test_db_connection.py –ª–æ–∫–∞–ª—å–Ω–æ

## –ü—Ä–æ–±–ª–µ–º–∞: Webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç

### –†–µ—à–µ–Ω–∏—è:
1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ TOKEN –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ WEBHOOK_URL
3. –û–±–Ω–æ–≤–∏—Ç–µ webhook –≤—Ä—É—á–Ω—É—é:
   ```
   https://api.telegram.org/bot{YOUR_TOKEN}/setWebhook?url=https://your-app-name.onrender.com/webhook
   ```

## –ü—Ä–æ–±–ª–µ–º–∞: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç

### –†–µ—à–µ–Ω–∏—è:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Render Dashboard
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Build Command –∏ Start Command
4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã

## –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

### –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
```bash
python test_db_connection.py
python -m uvicorn server.main:app --host 0.0.0.0 --port 8000
```

### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è:
```bash
curl https://your-app-name.onrender.com/health
```

### –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ webhook:
```bash
curl -X POST "https://api.telegram.org/bot{YOUR_TOKEN}/setWebhook" \
     -H "Content-Type: application/json" \
     -d '{"url": "https://your-app-name.onrender.com/webhook"}'
```
"""
    
    with open("TROUBLESHOOTING.md", "w", encoding="utf-8") as f:
        f.write(guide)
    
    print("‚úÖ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º —Å–æ–∑–¥–∞–Ω–æ")

def main():
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –î–ï–ü–õ–û–ô –ù–ê RENDER")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    if not check_files():
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π render.yaml
    create_fixed_render_yaml()
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    create_database_service()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    show_deploy_instructions()
    
    # –°–æ–∑–¥–∞–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º
    create_troubleshooting_guide()
    
    print("\n" + "=" * 60)
    print("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´!")
    print("\nüéØ –í–ê–®–ò –î–ï–ô–°–¢–í–ò–Ø:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://render.com")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Web Service")
    print("3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ")
    print("4. –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ TROUBLESHOOTING.md")
    print("\nüìñ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
    print("- TROUBLESHOOTING.md")
    print("- RENDER_DEPLOY.md")
    print("- test_db_connection.py")

if __name__ == "__main__":
    main() 