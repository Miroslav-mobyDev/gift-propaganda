#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ Render
"""

import os
import subprocess
import sys
from pathlib import Path

def print_step(step, description):
    """–í—ã–≤–æ–¥–∏—Ç —à–∞–≥ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"\n{step} {description}")
    print("-" * 50)

def check_prerequisites():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è"""
    print_step("üîç", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    required_files = ["requirements.txt", "server/main.py", "render.yaml"]
    for file in required_files:
        if Path(file).exists():
            print(f"‚úÖ {file}")
        else:
            print(f"‚ùå {file} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!")
            return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Git
    try:
        result = subprocess.run("git status", shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
        else:
            print("‚ùå Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    except:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Git")
        return False
    
    return True

def create_deploy_script():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è"""
    print_step("üìù", "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–µ–ø–ª–æ—è")
    
    script_content = """#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –Ω–∞ Render

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ Render..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ
if [ ! -f "requirements.txt" ]; then
    echo "‚ùå requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "server/main.py" ]; then
    echo "‚ùå server/main.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "render.yaml" ]; then
    echo "‚ùå render.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

echo "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ"

# –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
if ! git diff-index --quiet HEAD --; then
    echo "üìù –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git add .
    git commit -m "Auto deploy to Render"
fi

echo "‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://render.com"
echo "2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Web Service"
echo "3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
echo "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
echo "   - TOKEN=your_telegram_bot_token"
echo "   - WEBHOOK_URL=https://your-app-name.onrender.com/webhook"
echo "5. –°–æ–∑–¥–∞–π—Ç–µ PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
echo "6. –ù–∞–∂–º–∏—Ç–µ 'Create Web Service'"
"""
    
    with open("deploy.sh", "w", encoding="utf-8") as f:
        f.write(script_content)
    
    print("‚úÖ –°–∫—Ä–∏–ø—Ç deploy.sh —Å–æ–∑–¥–∞–Ω")

def show_render_config():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Render"""
    print_step("‚öôÔ∏è", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Render")
    
    print("render.yaml:")
    with open("render.yaml", "r") as f:
        print(f.read())
    
    print("\nrequirements.txt:")
    with open("requirements.txt", "r") as f:
        print(f.read())

def create_env_template():
    """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω .env —Ñ–∞–π–ª–∞"""
    print_step("üîß", "–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    env_template = """# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Render
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ Render Dashboard

# Telegram Bot Token
TOKEN=your_telegram_bot_token_here

# Webhook URL (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è)
WEBHOOK_URL=https://your-app-name.onrender.com/webhook

# Database URL (—Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ Render)
DATABASE_URL=postgresql://...
"""
    
    with open(".env.template", "w", encoding="utf-8") as f:
        f.write(env_template)
    
    print("‚úÖ .env.template —Å–æ–∑–¥–∞–Ω")

def show_deploy_checklist():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è –¥–µ–ø–ª–æ—è"""
    print_step("üìã", "–ß–µ–∫-–ª–∏—Å—Ç –¥–µ–ø–ª–æ—è")
    
    checklist = """
‚úÖ –ü–û–î–ì–û–¢–û–í–ö–ê:
   ‚ñ° –ö–æ–¥ –∑–∞–∫–æ–º–º–∏—á–µ–Ω –≤ GitHub
   ‚ñ° –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ
   ‚ñ° render.yaml –Ω–∞—Å—Ç—Ä–æ–µ–Ω
   ‚ñ° requirements.txt –æ–±–Ω–æ–≤–ª–µ–Ω

üåê RENDER DASHBOARD:
   ‚ñ° –°–æ–∑–¥–∞–Ω –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ render.com
   ‚ñ° –ü–æ–¥–∫–ª—é—á–µ–Ω GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
   ‚ñ° –°–æ–∑–¥–∞–Ω Web Service
   ‚ñ° –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
   ‚ñ° –°–æ–∑–¥–∞–Ω–∞ PostgreSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö

‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –°–ï–†–í–ò–°–ê:
   ‚ñ° Name: giftpropaganda-api
   ‚ñ° Environment: Python
   ‚ñ° Build Command: pip install -r requirements.txt
   ‚ñ° Start Command: uvicorn server.main:app --host 0.0.0.0 --port $PORT

üîß –ü–ï–†–ï–ú–ï–ù–ù–´–ï –û–ö–†–£–ñ–ï–ù–ò–Ø:
   ‚ñ° TOKEN=your_telegram_bot_token
   ‚ñ° WEBHOOK_URL=https://your-app-name.onrender.com/webhook
   ‚ñ° DATABASE_URL=postgresql://... (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)

üöÄ –î–ï–ü–õ–û–ô:
   ‚ñ° –ù–∞–∂–∞—Ç "Create Web Service"
   ‚ñ° –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
   ‚ñ° –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω

üîó –ü–û–°–õ–ï –î–ï–ü–õ–û–Ø:
   ‚ñ° –û–±–Ω–æ–≤–ª–µ–Ω webhook –≤ Telegram
   ‚ñ° –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω API
   ‚ñ° –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –ª–æ–≥–∏
"""
    
    print(checklist)

def main():
    print("üöÄ –ë–´–°–¢–†–´–ô –î–ï–ü–õ–û–ô –ù–ê RENDER")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if not check_prerequisites():
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è
    create_deploy_script()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    show_render_config()
    
    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω .env
    create_env_template()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ–∫-–ª–∏—Å—Ç
    show_deploy_checklist()
    
    print("\n" + "=" * 60)
    print("‚úÖ –í–°–ï –ì–û–¢–û–í–û –ö –î–ï–ü–õ–û–Æ!")
    print("\nüìã –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: bash deploy.sh")
    print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://render.com")
    print("3. –°–ª–µ–¥—É–π—Ç–µ —á–µ–∫-–ª–∏—Å—Ç—É –≤—ã—à–µ")
    print("\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: RENDER_DEPLOY.md")

if __name__ == "__main__":
    main() 